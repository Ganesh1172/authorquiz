{"version":3,"sources":["AuthorQuiz.js","index.js"],"names":["Hero","className","Book","title","onClick","Turn","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBeColor","src","imageUrl","alt","map","key","Continue","Footer","id","href","AuthorQuiz","turnData","state","authors","allBooks","reduce","p","c","i","concat","fourRandomBooks","shuffle","slice","answer","sample","find","some","getTurnData","name","imageSource","isCorrect","book","render","ReactDOM","document","getElementById"],"mappings":"oQAKA,SAASA,IACP,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,6BACb,2CACA,4EAMR,SAASC,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACrB,OACE,yBACEH,UAAU,SACVG,QAAS,WACPA,EAAQD,KAGV,4BAAKA,IAKX,SAASE,EAAT,GAA+D,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,iBASxC,OACE,yBACER,UAAU,WACVS,MAAO,CAAEC,gBAXb,SAA4BH,GAM1B,MALgB,CACdI,KAAM,GACNC,QAAS,QACTC,MAAO,OAEMN,GAKaO,CAAmBP,KAE7C,yBAAKP,UAAU,kBACb,yBAAKe,IAAKV,EAAOW,SAAUhB,UAAU,eAAeiB,IAAI,YAE1D,yBAAKjB,UAAU,SACZM,EAAMY,KAAI,SAAChB,GAAD,OACT,kBAACD,EAAD,CAAMC,MAAOA,EAAOiB,IAAKjB,EAAOC,QAASK,SAkBnD,SAASY,IACP,OAAO,8BAGT,SAASC,IACP,OACE,yBAAKC,GAAG,SAAStB,UAAU,OACzB,yBAAKA,UAAU,UACb,uBAAGA,UAAU,oBAAb,uBACsB,uBAAGuB,KAAK,kBAAR,sBADtB,8BAwBOC,MAff,YAAgE,IAA1CC,EAAyC,EAAzCA,SAAUlB,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,iBACzC,OACE,yBAAKR,UAAU,mBACb,kBAACD,EAAD,MACA,kBAACK,EAAD,iBACMqB,EADN,CAEElB,UAAWA,EACXC,iBAAkBA,KAEpB,kBAACY,EAAD,MACA,kBAACC,EAAD,Q,OCzBN,IAAMK,EAAQ,CACZD,SAfF,SAAqBE,GACnB,IAAMC,EAAWD,EAAQE,QAAO,SAAUC,EAAGC,EAAGC,GAC9C,OAAOF,EAAEG,OAAOF,EAAEzB,SACjB,IACG4B,EAAkBC,YAAQP,GAAUQ,MAAM,EAAG,GAC7CC,EAASC,YAAOJ,GAEtB,MAAO,CACL5B,MAAO4B,EACP7B,OAAQsB,EAAQY,MAAK,SAAClC,GAAD,OACnBA,EAAOC,MAAMkC,MAAK,SAACtC,GAAD,OAAWA,IAAUmC,SAKjCI,CA/DI,CACd,CACEC,KAAM,WACN1B,SAAU,qBACV2B,YAAa,mBACbrC,MAAO,CACL,iBACA,sBACA,kBACA,uBAGJ,CACEoC,KAAM,eACN1B,SAAU,yBACV2B,YAAa,mBACbrC,MAAO,CACL,MACA,mBACA,kCACA,0BAGJ,CACEoC,KAAM,aACN1B,SAAU,uBACV2B,YAAa,mBACbrC,MAAO,CAAC,WAAY,mBAAoB,eAAgB,qBAE1D,CACEoC,KAAM,cACN1B,SAAU,wBACV2B,YAAa,mBACbrC,MAAO,CAAC,OAAQ,mBAAoB,SAAU,YAEhD,CACEoC,KAAM,aACN1B,SAAU,uBACV2B,YAAa,mBACbrC,MAAO,CACL,eACA,kBACA,eACA,yBAqBJC,UAAW,IAGb,SAASC,EAAiB6B,GACxB,IAAMO,EAAYlB,EAAMD,SAASpB,OAAOC,MAAMkC,MAAK,SAACK,GAAD,OAAUA,IAASR,KACtEX,EAAMnB,UAAYqC,EAAY,UAAY,QAC1CE,IAEF,SAASA,IACPC,IAASD,OACP,kBAAC,EAAD,iBAAgBpB,EAAhB,CAAuBlB,iBAAkBA,KACzCwC,SAASC,eAAe,SAG5BH,M","file":"static/js/main.be8d58cf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\n\nfunction Hero() {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by the author shown</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Book({ title, onClick }) {\n  return (\n    <div\n      className=\"answer\"\n      onClick={() => {\n        onClick(title);\n      }}\n    >\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Turn({ author, books, highlight, onAnswerSelected }) {\n  function highlightToBeColor(highlight) {\n    const mapping = {\n      none: \"\",\n      correct: \"green\",\n      wrong: \"red\",\n    };\n    return mapping[highlight];\n  }\n  return (\n    <div\n      className=\"row turn\"\n      style={{ backgroundColor: highlightToBeColor(highlight) }}\n    >\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"author-image\" alt=\"Author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map((title) => (\n          <Book title={title} key={title} onClick={onAnswerSelected} />\n        ))}\n      </div>\n    </div>\n  );\n}\nTurn.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource: PropTypes.string.isRequired,\n    books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }),\n  books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  highlight: PropTypes.string.isRequired,\n};\n\nfunction Continue() {\n  return <div />;\n}\n\nfunction Footer() {\n  return (\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credt\">\n          All images are from <a href=\"www.google.com\">Wikemedia Commons </a>and\n          in the public domain\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction AuthorQuiz({ turnData, highlight, onAnswerSelected }) {\n  return (\n    <div className=\"container-fluid\">\n      <Hero />\n      <Turn\n        {...turnData}\n        highlight={highlight}\n        onAnswerSelected={onAnswerSelected}\n      />\n      <Continue />\n      <Footer />\n    </div>\n  );\n}\n\nexport default AuthorQuiz;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AuthorQuiz from \"./AuthorQuiz\";\nimport { shuffle, sample } from \"underscore\";\n\nconst authors = [\n  {\n    name: \"Stan Lee\",\n    imageUrl: \"images/stanlee.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\n      \"Fantastic Four\",\n      \"The Incredible Hulk\",\n      \"Amazing Fantasy\",\n      \"Tales of Suspense \",\n    ],\n  },\n  {\n    name: \"Frank Miller\",\n    imageUrl: \"images/frankmiller.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\n      \"300\",\n      \"Batman: Year One\",\n      \"Wolverine by Claremont & Miller\",\n      \"Daredevil: Born Again\",\n    ],\n  },\n  {\n    name: \"Alan Moore\",\n    imageUrl: \"images/alanmoore.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\"Watchmen\", \"The Killing Joke\", \"Black Legacy\", \"Black Sun Rising\"],\n  },\n  {\n    name: \"Mark Millar\",\n    imageUrl: \"images/markmillar.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\"Huck\", \"Jupiter's Circle\", \"Reborn\", \"Empress\"],\n  },\n  {\n    name: \"John Byrne\",\n    imageUrl: \"images/johnbyrne.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\n      \"The Avengers\",\n      \"Incredible Hulk\",\n      \"Alpha Flight\",\n      \"Amazing Spider-Man\",\n    ],\n  },\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    author: authors.find((author) =>\n      author.books.some((title) => title === answer)\n    ),\n  };\n}\nconst state = {\n  turnData: getTurnData(authors),\n  highlight: \"\",\n};\n\nfunction onAnswerSelected(answer) {\n  const isCorrect = state.turnData.author.books.some((book) => book === answer);\n  state.highlight = isCorrect ? \"correct\" : \"wrong\";\n  render();\n}\nfunction render() {\n  ReactDOM.render(\n    <AuthorQuiz {...state} onAnswerSelected={onAnswerSelected} />,\n    document.getElementById(\"root\")\n  );\n}\nrender();\n"],"sourceRoot":""}