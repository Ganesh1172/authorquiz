{"version":3,"sources":["AuthorQuiz.js","index.js"],"names":["Hero","className","Book","title","Turn","author","books","style","backgroundColor","src","imageUrl","alt","map","key","Continue","Footer","id","href","AuthorQuiz","turnData","state","authors","allBooks","reduce","p","c","i","concat","fourRandomBooks","shuffle","slice","answer","sample","find","some","getTurnData","name","imageSource","ReactDOM","render","document","getElementById"],"mappings":"oQAIA,SAASA,IACP,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,6BACb,2CACA,4EAMR,SAASC,EAAT,GAA0B,IAAVC,EAAS,EAATA,MACd,OACE,yBAAKF,UAAU,UACb,4BAAKE,IAKX,SAASC,EAAT,GAAkC,IAAlBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MACtB,OACE,yBAAKL,UAAU,WAAWM,MAAO,CAAEC,gBAAiB,UAClD,yBAAKP,UAAU,kBACb,yBAAKQ,IAAKJ,EAAOK,SAAUT,UAAU,eAAeU,IAAI,YAE1D,yBAAKV,UAAU,SACZK,EAAMM,KAAI,SAACT,GAAD,OACT,kBAACD,EAAD,CAAMC,MAAOA,EAAOU,IAAKV,SAOnC,SAASW,IACP,OAAO,8BAGT,SAASC,IACP,OACE,yBAAKC,GAAG,SAASf,UAAU,OACzB,yBAAKA,UAAU,UACb,uBAAGA,UAAU,oBAAb,uBACsB,uBAAGgB,KAAK,kBAAR,sBADtB,8BAoBOC,MAXf,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OACE,yBAAKlB,UAAU,mBACb,kBAACD,EAAD,MACA,kBAACI,EAASe,GACV,kBAACL,EAAD,MACA,kBAACC,EAAD,Q,OCON,IAAMK,EAAQ,CACZD,SAfF,SAAqBE,GACnB,IAAMC,EAAWD,EAAQE,QAAO,SAAUC,EAAGC,EAAGC,GAC9C,OAAOF,EAAEG,OAAOF,EAAEnB,SACjB,IACGsB,EAAkBC,YAAQP,GAAUQ,MAAM,EAAG,GAC7CC,EAASC,YAAOJ,GAEtB,MAAO,CACLtB,MAAOsB,EACPvB,OAAQgB,EAAQY,MAAK,SAAC5B,GAAD,OACnBA,EAAOC,MAAM4B,MAAK,SAAC/B,GAAD,OAAWA,IAAU4B,SAKjCI,CA/DI,CACd,CACEC,KAAM,WACN1B,SAAU,qBACV2B,YAAa,mBACb/B,MAAO,CACL,iBACA,sBACA,kBACA,uBAGJ,CACE8B,KAAM,eACN1B,SAAU,yBACV2B,YAAa,mBACb/B,MAAO,CACL,MACA,mBACA,kCACA,0BAGJ,CACE8B,KAAM,aACN1B,SAAU,uBACV2B,YAAa,mBACb/B,MAAO,CAAC,WAAY,mBAAoB,eAAgB,qBAE1D,CACE8B,KAAM,cACN1B,SAAU,wBACV2B,YAAa,mBACb/B,MAAO,CAAC,OAAQ,mBAAoB,SAAU,YAEhD,CACE8B,KAAM,aACN1B,SAAU,uBACV2B,YAAa,mBACb/B,MAAO,CACL,eACA,kBACA,eACA,0BAsBNgC,IAASC,OAAO,kBAAC,EAAenB,GAAWoB,SAASC,eAAe,W","file":"static/js/main.66a40b93.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\n\nfunction Hero() {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by the author shown</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Book({ title }) {\n  return (\n    <div className=\"answer\">\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Turn({ author, books }) {\n  return (\n    <div className=\"row turn\" style={{ backgroundColor: \"white\" }}>\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"author-image\" alt=\"Author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map((title) => (\n          <Book title={title} key={title} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction Continue() {\n  return <div />;\n}\n\nfunction Footer() {\n  return (\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credt\">\n          All images are from <a href=\"www.google.com\">Wikemedia Commons </a>and\n          in the public domain\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction AuthorQuiz({ turnData }) {\n  return (\n    <div className=\"container-fluid\">\n      <Hero />\n      <Turn {...turnData} />\n      <Continue />\n      <Footer />\n    </div>\n  );\n}\n\nexport default AuthorQuiz;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AuthorQuiz from \"./AuthorQuiz\";\nimport { shuffle, sample } from \"underscore\";\n\nconst authors = [\n  {\n    name: \"Stan Lee\",\n    imageUrl: \"images/stanlee.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\n      \"Fantastic Four\",\n      \"The Incredible Hulk\",\n      \"Amazing Fantasy\",\n      \"Tales of Suspense \",\n    ],\n  },\n  {\n    name: \"Frank Miller\",\n    imageUrl: \"images/frankmiller.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\n      \"300\",\n      \"Batman: Year One\",\n      \"Wolverine by Claremont & Miller\",\n      \"Daredevil: Born Again\",\n    ],\n  },\n  {\n    name: \"Alan Moore\",\n    imageUrl: \"images/alanmoore.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\"Watchmen\", \"The Killing Joke\", \"Black Legacy\", \"Black Sun Rising\"],\n  },\n  {\n    name: \"Mark Millar\",\n    imageUrl: \"images/markmillar.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\"Huck\", \"Jupiter's Circle\", \"Reborn\", \"Empress\"],\n  },\n  {\n    name: \"John Byrne\",\n    imageUrl: \"images/johnbyrne.jpg\",\n    imageSource: \"Wikimedia Comics\",\n    books: [\n      \"The Avengers\",\n      \"Incredible Hulk\",\n      \"Alpha Flight\",\n      \"Amazing Spider-Man\",\n    ],\n  },\n];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce(function (p, c, i) {\n    return p.concat(c.books);\n  }, []);\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n\n  return {\n    books: fourRandomBooks,\n    author: authors.find((author) =>\n      author.books.some((title) => title === answer)\n    ),\n  };\n}\nconst state = {\n  turnData: getTurnData(authors),\n};\nReactDOM.render(<AuthorQuiz {...state} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}